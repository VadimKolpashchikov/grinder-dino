import React, { useState } from "react";
import { Swiper, SwiperSlide } from "swiper/react";
import { Navigation, Pagination } from "swiper";
import CustomersItem from "./CustomersItem.jsx";
import ModalReview from "../components/ModalReview.jsx";
import { useDispatch } from "react-redux";
import { openReview } from "../store/modalsReducer.js";
function Customers() {
  const dispatch = useDispatch();
  const [customersList, setCustomersList] = useState([
    {
      title: "–û–ª–µ–≥ –°–∞–ª—å–∫–æ–≤, –≥.&nbsp;–ú–æ—Å–∫–≤–∞",
      prof: "–í–ª–∞–¥–µ–ª–µ—Ü —Ç–æ—á–∏–ª—å–Ω–æ–π&nbsp;–º–∞—Å—Ç–µ—Ä—Å–∫–æ–π",
      text: `‚Äî –î–æ–ª–≥–æ –Ω–µ –ø–æ–Ω–∏–º–∞–ª –≤ —á—ë–º –ø—Ä–∏–∫–æ–ª –≥—Ä–∏–Ω–¥–µ—Ä–∞ –∏ —á–µ–º –æ–Ω –ª—É—á—à–µ –ª–µ–ø–µ—Å—Ç–∫–æ–≤–æ–≥–æ –∫—Ä—É–≥–∞ –Ω–∞ –±–æ–ª–≥–∞—Ä–∫—É –æ—Å–æ–±–æ. –¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±–æ–≤–∞–ª —Å–∞–º –∏ –≤—ã—è—Å–Ω–∏–ª . —à–ª–∏—Ñ–æ–≤–∫–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –±—ã—Å—Ç—Ä–µ–µ –∏ —Ä–æ–≤–Ω–µ–µ. –î–ª—è –ø–æ–¥–≥–æ–Ω–∫–∏ –¥–µ—Ç–∞–ª–µ–π —Å–≤–∞—Ä–∫–∏ –≤–æ–æ–±—â–µ –æ–ø—Ç–∏–º–∞–ª, –∫—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è —Å–≤–∞—Ä–∫–æ–π –Ω–µ—Ä–∂–∞–≤–µ–π–∫–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Ä–æ–≤–Ω—É—é –ø–ª–æ—Å–∫–æ—Å—Ç—å –∏–∑ –∂–µ–ª–µ–∑—è–∫–∏‚Ä¶ —à–ª–∏—Ñ–æ–≤–∫–∞ –¥—Ä–µ–≤–µ—Å–∏–Ω—ã –æ—Ç –ª–∫–º.`,
      textTwo: `‚Äî –í –æ–±—â–µ–º –Ω–æ—Ä–º –¥–∞–∂–µ –µ—Å–ª–∏ –¥–æ–ª–≥–æ –∫–æ–ª–±–∞—Å–∏—Ç—å. –í–∑—è–ª –≤ –º–∞—Å—Ç–µ—Ä—Å–∫—É –ø–æ–∫–∞ –¥–æ–≤–æ–ª–µ–Ω. –ë—É–¥–µ–º —Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞–ª—å—à–µ`,
    },
    {
      title: "–î–∞–Ω–∏–∏–ª –ö–∞–ª–∏–Ω–∏–Ω, –≥.&nbsp;–¢–≤–µ—Ä—å",
      prof: "–¢–æ–∫–∞—Ä—å",
      text: `‚Äî —Ç–∞–∫–æ–µ –¥–µ–ª–æ. –Ω–µ—Å–º–æ—Ç—è –Ω–∞ –∫–æ–Ω—Å–∫–∏–µ –æ–±–æ—Ä–æ—Ç—ã,—Ä–µ—à–∏–ª —Ç–æ—á–∏—Ç—å —Ç–æ–∫–∞—Ä–Ω—ã–µ —Ä–µ–∑—Ü—ã, –ø–æ—Ç–æ–º—É —á—Ç–æ –Ω–µ –≤—Å—è–∫–∏–π –∫—Ä—É–≥ –∏—Ö –±–µ—Ä–µ—Ç. –í—Å—ë –ø–æ–ª—É—á–∏–ª–æ—Å—å. –¢–æ—Ä—Ü–µ–≤–∞—è –≤—ã–±–æ—Ä–∫–∞ —Ç—Ä—É–±—ã –ø–æ–¥ –¢-–æ–±—Ä–∞–∑–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Ç–æ–∂–µ –ø–æ—à–ª–∞. –°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–æ–≤–∞—Ä.`,
    },
    {
      title: "–°—Ç–µ–ø–∞–Ω –°—É–Ω—Ü–æ–≤, –≥.&nbsp;–ö–∞–ª—É–≥–∞",
      prof: "–°–∞–¥–æ–≤–æ–¥",
      text: `‚Äî –ú–Ω–µ –≤—Å–µ –Ω–æ—Ä–º, –æ—Å—Ç–∞–≤–ª—é –¥–∞–∂–µ –Ω–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ, –∞ —Ç–æ –º–æ–π —Å–æ–≤—Å–µ–º –ø–æ–º–µ—Ä üòé.`,
    },
    {
      title: "–°—Ç–∞—Å –ö–æ—Ä—á—ë–º–∫–∏–Ω, –ø–æ—Å&nbsp;–ú–∏—Ä–æ–Ω—ã–π",
      prof: "–°—Ç–æ–ª—è—Ä",
      text: `‚Äî –ü–∞—Ä—É –¥–Ω–µ–π –ø–æ—Ä–∞–±–æ—Ç–∞–ª, –≥–æ–¥–Ω–æ—Ç–∞. –í–±–∏–≤–∞–ª –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ –ø–æ-–≤—Å—è–∫–æ–º—É, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –∞–Ω–∞–ª–æ–≥–∏ –∏–ª–∏ —Ä–µ–π—Ç–∏–Ω–≥ –≥–ª—è–Ω—É—Ç—å ‚Äî –ø—Ä–æ—Å—Ç–æ –ª—é–±–æ–ø—ã—Ç–Ω–æ –±—ã–ª–æ –∏–Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–µ–ª. –†–∞–±–æ—Ç–∞—é —Å–µ–π—á–∞—Å –≤ –æ—Å–Ω–∞–≤–Ω–æ–º —Å –ø–ª–∞—Å—Ç–∏–∫–æ–º –∏ –ø—Ä–æ–±–ª–µ–º–∞, —á—Ç–æ –ø—Ä–∏ –Ω–∞–≥—Ä–µ–≤–µ —Ä–æ–ª–∏–∫–æ–≤ —Ä–∞–±–æ—Ç–∞—Ç—å —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.–≠—Ç–æ –∂–Ω–∞–¥–æ –∫–∞–∂–¥—ã —Ä–∞–∑ –∂–¥–∞—Ç—å —á—Ç–æ–±—ã –æ—Å—Ç—ã–ª. –ó–¥–µ—Å—å —Ç–∞–∫–æ–π –ø—Ä–æ–±–ª–µ–º—ã –∑–∞–º–µ—Ç–∏–ª. –ó–∞ —Å–≤–æ–π –∫–µ—à —Å—Ç–∞–Ω–æ–∫ –ø—Ä–æ—Å—Ç–æ —Ç–æ–ø. –ú–æ–∂–Ω–æ –ª–∏ –±—É–¥–µ—Ç –∑–∞–∫–∞–∑–∞—Ç—å –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö —Å –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –¥–æ—Å—Ç–∞–≤–∫–æ–π? –ï—â–µ –ø–æ—Ä–∞–¥–æ–≤–∞–ª–∞ —á—Ç–æ —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π –≤—Å–µ –Ω–æ—Ä–º.`,
    },
  ]);
  const [sendedReview, setSendedReview] = useState(false);

  return (
    <section id="customers" className="customers">
      <div className="content-container">
        <div className="title-box">
          <h2 className="title">–û—Ç–∑—ã–≤—ã –ø–µ—Ä–≤—ã—Ö –æ–±–ª–∞–¥–∞—Ç–µ–ª–µ–π –≥—Ä–∏–Ω–¥–µ—Ä–∞ DINO</h2>
        </div>
        <div className="row">
          <div className="customers__slider-block">
            <div className="customers__slider">
              <Swiper
                modules={[Navigation, Pagination]}
                loop={true}
                slidesPerView={"auto"}
                spaceBetween={20}
                navigation={{
                  prevEl: ".customers__slider-prev",
                  nextEl: ".customers__slider-next",
                }}
                pagination={{
                  clickable: true,
                  el: ".customers__pagination",
                }}
                breakpoints={{
                  768: {
                    slidesPerView: 1,
                  },
                }}
              >
                {customersList.map((item, idx) => (
                  <SwiperSlide key={idx}>
                    <CustomersItem img={idx + 1} item={item} />
                  </SwiperSlide>
                ))}
              </Swiper>
            </div>
            <div className="customers__slider-controls">
              <div className="customers__slider-prev">
                <span>
                  <img
                    src="build/images/global/arrow-left.svg"
                    alt="–ü—Ä–µ–¥—ã–¥—É—â–∏–π —Å–ª–∞–π–¥"
                  />
                </span>
              </div>
              <div className="customers__slider-next">
                <span>
                  <img
                    src="build/images/global/arrow-right.svg"
                    alt="–°–ª–µ–¥—É—é—â–∏–π —Å–ª–∞–π–¥"
                  />
                </span>
              </div>
            </div>
            <div className="customers__pagination"></div>
          </div>
          <div className="customers__btn-wrap">
            <button
              disabled={sendedReview}
              onClick={() => dispatch(openReview(true))}
              className="btn"
            >
              –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
            </button>
          </div>
        </div>
      </div>
      <ModalReview setSendedReview={setSendedReview} />
    </section>
  );
}

export default Customers;
